/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package uygulama;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author yilma
 */
public class Paratransfersayfa extends javax.swing.JFrame {

    /**
     * Creates new form Paratransfersayfa
     */
    public Paratransfersayfa() {
        initComponents();
        addPlaceholderStyle(txtGonderenKullanici);
        addPlaceholderStyle(txtAliciKullanici);
        addPlaceholderStyle(txtTransferMiktari);
    }

    public void addPlaceholderStyle(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.gray);
    }
    
     public void removePlaceholderStyle(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN|Font.BOLD);
        textField.setFont(font);
        textField.setForeground(Color.black);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtGonderenKullanici = new javax.swing.JTextField();
        txtAliciKullanici = new javax.swing.JTextField();
        txtTransferMiktari = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        txtGonderenKullanici.setText("Gönderen Adı");
        txtGonderenKullanici.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGonderenKullaniciFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGonderenKullaniciFocusLost(evt);
            }
        });

        txtAliciKullanici.setText("Alıcı Adı");
        txtAliciKullanici.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAliciKullaniciFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAliciKullaniciFocusLost(evt);
            }
        });

        txtTransferMiktari.setText("Transfer miktarı");
        txtTransferMiktari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTransferMiktariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTransferMiktariFocusLost(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Onayla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Transfer işlemleri");

        jButton2.setText("Geri");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText(":");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGonderenKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAliciKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTransferMiktari, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 109, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(19, 19, 19))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(txtGonderenKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtAliciKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTransferMiktari, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton2)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private double getBakiye(String kullaniciAdi) {
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        kullaniciAdi = "root";
        String sifre = "145304";
         
         try {
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            String sorgu = "SELECT money FROM kullanicilar WHERE username = ?";
            try (PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu)) {
                preparedStatement.setString(1, KullaniciAdi);
                
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    if (resultSet.next()) {
                        return resultSet.getDouble("money");
                    } else {
                        JOptionPane.showMessageDialog(this, "Kullanıcı bulunamadı.");
                        return 0;
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return 0;
        }
    }
    
    
    private void transferYap(String gonderen, String alici, double miktar) {
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        String kullaniciAdi = "root";
        String sifre = "145304";
        
        try {
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            baglanti.setAutoCommit(false);

            // Gonderenin bakiyesini güncelle
            String gonderenSorgu = "UPDATE employee SET money = money - ? WHERE username = ?";
            try (PreparedStatement gonderenStatement = baglanti.prepareStatement(gonderenSorgu)) {
                gonderenStatement.setDouble(1, miktar);
                gonderenStatement.setString(2, gonderen);
                gonderenStatement.executeUpdate();
            }

            // Alicinin bakiyesini güncelle
            String aliciSorgu = "UPDATE employee SET money = money + ? WHERE username = ?";
            try (PreparedStatement aliciStatement = baglanti.prepareStatement(aliciSorgu)) {
                aliciStatement.setDouble(1, miktar);
                aliciStatement.setString(2, alici);
                aliciStatement.executeUpdate();
            }

            baglanti.commit();

        } catch (SQLException e) {
            try {
                 Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
                baglanti.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            e.printStackTrace();
        } finally {
            try {
                Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
                baglanti.setAutoCommit(true);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    String gonderenKullanici = txtGonderenKullanici.getText();
    String aliciKullanici = txtAliciKullanici.getText();
    String transferMiktariStr = txtTransferMiktari.getText();
    String KullaniciAdi = Session.getInstance().getKullaniciAdi();
    if(!KullaniciAdi.equals(gonderenKullanici)){
        JOptionPane.showMessageDialog(this, "Kendi kullanıcı adınızı giriniz.");
        return;
        
    }
    else
        if(KullaniciAdi.equals(aliciKullanici)){
            JOptionPane.showMessageDialog(this, "Kendinize para göndermenize gerek yok :)");
        }
    else{
        try {
        double transferMiktari = Double.parseDouble(transferMiktariStr);

        double gonderenBakiye = getBakiye(gonderenKullanici);

        if (gonderenBakiye < transferMiktari) {
            JOptionPane.showMessageDialog(this, "Yetersiz bakiye. Transfer iptal edildi.");
            return;
        }

        transferYap(gonderenKullanici, aliciKullanici, transferMiktari);

        JOptionPane.showMessageDialog(this, "Transfer başarıyla gerçekleştirildi.");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Geçersiz miktar formatı!");
    }
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtGonderenKullaniciFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGonderenKullaniciFocusGained
        if(txtGonderenKullanici.getText().equals("Gönderen Adı")){
            txtGonderenKullanici.setText(null);
            txtGonderenKullanici.requestFocus();
            removePlaceholderStyle(txtGonderenKullanici);
        }
    }//GEN-LAST:event_txtGonderenKullaniciFocusGained

    private void txtGonderenKullaniciFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGonderenKullaniciFocusLost
       if(txtGonderenKullanici.getText().length()==0){
            addPlaceholderStyle(txtGonderenKullanici);
            txtGonderenKullanici.setText("Gönderen Adı");
        }
    }//GEN-LAST:event_txtGonderenKullaniciFocusLost

    private void txtAliciKullaniciFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAliciKullaniciFocusGained
        if(txtAliciKullanici.getText().equals("Alıcı Adı")){
            txtAliciKullanici.setText(null);
            txtAliciKullanici.requestFocus();
            removePlaceholderStyle(txtAliciKullanici);
        }
    }//GEN-LAST:event_txtAliciKullaniciFocusGained

    private void txtAliciKullaniciFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAliciKullaniciFocusLost
        if(txtAliciKullanici.getText().length()==0){
            addPlaceholderStyle(txtAliciKullanici);
            txtAliciKullanici.setText("Alıcı Adı");
        }
    }//GEN-LAST:event_txtAliciKullaniciFocusLost

    private void txtTransferMiktariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransferMiktariFocusGained
        if(txtTransferMiktari.getText().equals("Transfer miktarı")){
            txtTransferMiktari.setText(null);
            txtTransferMiktari.requestFocus();
            removePlaceholderStyle(txtTransferMiktari);
        }
    }//GEN-LAST:event_txtTransferMiktariFocusGained

    private void txtTransferMiktariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransferMiktariFocusLost
        if(txtTransferMiktari.getText().length()==0){
            addPlaceholderStyle(txtTransferMiktari);
            txtTransferMiktari.setText("Transfer miktarı");
        }
    }//GEN-LAST:event_txtTransferMiktariFocusLost

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bankamatik bankamatiksayfa = new bankamatik();
        bankamatiksayfa.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       String KullaniciAdi = Session.getInstance().getKullaniciAdi(); 
        try{
            Connection baglanti = DriverManager.getConnection("jdbc:mysql://localhost:3306/baglanti", "root", "145304");
            String sorgu = "SELECT money FROM kullanicilar WHERE username = ?";
            try (PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu)) {
                preparedStatement.setString(1, KullaniciAdi);
                
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                     if (resultSet.next()) {
                        String paraBirimi = resultSet.getString("money");
                        jLabel2.setText("Bakiyeniz " + paraBirimi);
                     } else {
                         jLabel2.setText("Bakiye bulunamadı");
                        }   
                    }
                }
            }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paratransfersayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paratransfersayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paratransfersayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paratransfersayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paratransfersayfa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAliciKullanici;
    private javax.swing.JTextField txtGonderenKullanici;
    private javax.swing.JTextField txtTransferMiktari;
    // End of variables declaration//GEN-END:variables
}
