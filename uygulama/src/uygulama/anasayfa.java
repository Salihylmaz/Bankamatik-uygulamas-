package uygulama;

import java.awt.event.ActionEvent;
import java.awt.event.FocusAdapter;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.Font;

/**
 *
 * @author yilma
 */
public class anasayfa extends javax.swing.JFrame {

    /**
     * Creates new form anasayfa
     */
    
    
    
    public anasayfa() {
       initComponents();
        addPlaceholderStyle(txtGonderenKullanici);
        addPlaceholderStyle(txtAliciKullanici);
        addPlaceholderStyle(txtTransferMiktari);
    }

    public void addPlaceholderStyle(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.gray);
    }
    
     public void removePlaceholderStyle(JTextField textField){
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN|Font.BOLD);
        textField.setFont(font);
        textField.setForeground(Color.black);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        txtEklenecekMiktar = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        txtGonderenKullanici = new javax.swing.JTextField();
        txtAliciKullanici = new javax.swing.JTextField();
        txtTransferMiktari = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setPreferredSize(new java.awt.Dimension(450, 600));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Hesabınıza hoşgeldiniz");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Hangi işlemi apmak istersiniz?");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Para yatırma");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Para çekme");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Para transferi");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setText("Hesabınızdaki para miktarı");

        jButton2.setText("Onayla");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Onayla");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Onayla");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setText("Onayla");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField1.setPreferredSize(new java.awt.Dimension(64, 23));

        txtGonderenKullanici.setText("Gönderen Adı");
        txtGonderenKullanici.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtGonderenKullaniciFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGonderenKullaniciFocusLost(evt);
            }
        });
        txtGonderenKullanici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGonderenKullaniciActionPerformed(evt);
            }
        });

        txtAliciKullanici.setText("Alıcı Adı");
        txtAliciKullanici.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAliciKullaniciFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAliciKullaniciFocusLost(evt);
            }
        });
        txtAliciKullanici.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAliciKullaniciActionPerformed(evt);
            }
        });

        txtTransferMiktari.setText("Transfer miktarı");
        txtTransferMiktari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtTransferMiktariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTransferMiktariFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(240, 240, 240))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtEklenecekMiktar)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtTransferMiktari, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtAliciKullanici, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtGonderenKullanici)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(28, 28, 28)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(467, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEklenecekMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtGonderenKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAliciKullanici, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTransferMiktari, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        
        String url = "jdbc:mysql://localhost:3306/baglanti";
        String kullaniciAdi = "root";
        String sifre = "145304";

        try {
        Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
        String sorgu = "SELECT money FROM employee WHERE username = ?";
        PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu);
        preparedStatement.setString(1, KullaniciAdi);

        ResultSet sonuc = preparedStatement.executeQuery();

        if (sonuc.next()) {
            double paraMiktari = sonuc.getDouble("money");
            JOptionPane.showMessageDialog(this, "Mevcut Para Miktarı: " + paraMiktari);
        } else {
            JOptionPane.showMessageDialog(this, "Kullanıcı Bulunamadı");
        }

    } catch (SQLException e) {
        e.printStackTrace();
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        String kullaniciAdi = "root";
        String sifre = "145304";
       try {
            String miktarStr = txtEklenecekMiktar.getText();
            if (miktarStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Lütfen miktarı girin.");
                return;
            }

            double eklenecekMiktar = Double.parseDouble(miktarStr);
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            String sorgu = "UPDATE employee SET money = money + ? WHERE username = ?";
            try (PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu)) {
                preparedStatement.setDouble(1, eklenecekMiktar);
                preparedStatement.setString(2, KullaniciAdi);

                int etkilenenSatirSayisi = preparedStatement.executeUpdate();

                if (etkilenenSatirSayisi > 0) {
                    JOptionPane.showMessageDialog(this, "Para başarıyla eklendi!");
                } else {
                    JOptionPane.showMessageDialog(this, "Para eklenirken bir hata oluştu.");
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Geçersiz miktar formatı!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        String kullaniciAdi = "root";
        String sifre = "145304";
       try {
            String miktarStr = jTextField1.getText();
            if (miktarStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Lütfen çekmek isrediğiniz miktarı girin.");
                return;
            }

            double eklenecekMiktar = Double.parseDouble(miktarStr);
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            String sorgu = "UPDATE employee SET money = money - ? WHERE username = ?";
            try (PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu)) {
                preparedStatement.setDouble(1, eklenecekMiktar);
                preparedStatement.setString(2, KullaniciAdi);

                int etkilenenSatirSayisi = preparedStatement.executeUpdate();

                if (etkilenenSatirSayisi > 0) {
                    JOptionPane.showMessageDialog(this, "Para başarıyla çekildi!");
                } else {
                    JOptionPane.showMessageDialog(this, "Para çekilirken bir hata oluştu.");
                }
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Geçersiz miktar formatı!");
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtGonderenKullaniciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGonderenKullaniciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGonderenKullaniciActionPerformed

    private void txtAliciKullaniciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAliciKullaniciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAliciKullaniciActionPerformed
    
    
    
    
    
     private double getBakiye(String kullaniciAdi) {
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        kullaniciAdi = "root";
        String sifre = "145304";
         
         try {
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            String sorgu = "SELECT money FROM employee WHERE username = ?";
            try (PreparedStatement preparedStatement = baglanti.prepareStatement(sorgu)) {
                preparedStatement.setString(1, KullaniciAdi);
                
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    if (resultSet.next()) {
                        return resultSet.getDouble("money");
                    } else {
                        JOptionPane.showMessageDialog(this, "Kullanıcı bulunamadı.");
                        return 0;
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            return 0;
        }
    }
    
    private void transferYap(String gonderen, String alici, double miktar) {
        String KullaniciAdi = Session.getInstance().getKullaniciAdi();
        String url = "jdbc:mysql://localhost:3306/baglanti";
        String kullaniciAdi = "root";
        String sifre = "145304";
        
        try {
            Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
            baglanti.setAutoCommit(false);

            // Gonderenin bakiyesini güncelle
            String gonderenSorgu = "UPDATE employee SET money = money - ? WHERE username = ?";
            try (PreparedStatement gonderenStatement = baglanti.prepareStatement(gonderenSorgu)) {
                gonderenStatement.setDouble(1, miktar);
                gonderenStatement.setString(2, gonderen);
                gonderenStatement.executeUpdate();
            }

            // Alicinin bakiyesini güncelle
            String aliciSorgu = "UPDATE employee SET money = money + ? WHERE username = ?";
            try (PreparedStatement aliciStatement = baglanti.prepareStatement(aliciSorgu)) {
                aliciStatement.setDouble(1, miktar);
                aliciStatement.setString(2, alici);
                aliciStatement.executeUpdate();
            }

            baglanti.commit();

        } catch (SQLException e) {
            try {
                 Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
                baglanti.rollback();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            e.printStackTrace();
        } finally {
            try {
                Connection baglanti = DriverManager.getConnection(url, kullaniciAdi, sifre);
                baglanti.setAutoCommit(true);
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
    
     
     
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    String gonderenKullanici = txtGonderenKullanici.getText();
    String aliciKullanici = txtAliciKullanici.getText();
    String transferMiktariStr = txtTransferMiktari.getText();
    String KullaniciAdi = Session.getInstance().getKullaniciAdi();
    if(!KullaniciAdi.equals(gonderenKullanici)){
        JOptionPane.showMessageDialog(this, "Kendi kullanıcı adınızı giriniz.");
        return;
        
    }
    else
        if(KullaniciAdi.equals(aliciKullanici)){
            JOptionPane.showMessageDialog(this, "Kendinize para göndermenize gerek yok :)");
        }
    else{
        try {
        double transferMiktari = Double.parseDouble(transferMiktariStr);

        double gonderenBakiye = getBakiye(gonderenKullanici);

        if (gonderenBakiye < transferMiktari) {
            JOptionPane.showMessageDialog(this, "Yetersiz bakiye. Transfer iptal edildi.");
            return;
        }

        transferYap(gonderenKullanici, aliciKullanici, transferMiktari);

        JOptionPane.showMessageDialog(this, "Transfer başarıyla gerçekleştirildi.");

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Geçersiz miktar formatı!");
    }
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtGonderenKullaniciFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGonderenKullaniciFocusGained
        if(txtGonderenKullanici.getText().equals("Gönderen Adı")){
            txtGonderenKullanici.setText(null);
            txtGonderenKullanici.requestFocus();
            removePlaceholderStyle(txtGonderenKullanici);
        }
    }//GEN-LAST:event_txtGonderenKullaniciFocusGained

    private void txtAliciKullaniciFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAliciKullaniciFocusGained
        if(txtAliciKullanici.getText().equals("Alıcı Adı")){
            txtAliciKullanici.setText(null);
            txtAliciKullanici.requestFocus();
            removePlaceholderStyle(txtAliciKullanici);
        }
    }//GEN-LAST:event_txtAliciKullaniciFocusGained

    private void txtTransferMiktariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransferMiktariFocusGained
        if(txtTransferMiktari.getText().equals("Transfer miktarı")){
            txtTransferMiktari.setText(null);
            txtTransferMiktari.requestFocus();
            removePlaceholderStyle(txtTransferMiktari);
        }
    }//GEN-LAST:event_txtTransferMiktariFocusGained

    private void txtGonderenKullaniciFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGonderenKullaniciFocusLost
        if(txtGonderenKullanici.getText().length()==0){
            addPlaceholderStyle(txtGonderenKullanici);
            txtGonderenKullanici.setText("Gönderen Adı");
        }
    }//GEN-LAST:event_txtGonderenKullaniciFocusLost

    private void txtAliciKullaniciFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAliciKullaniciFocusLost
        if(txtAliciKullanici.getText().length()==0){
            addPlaceholderStyle(txtAliciKullanici);
            txtAliciKullanici.setText("Alıcı Adı");
        }
    }//GEN-LAST:event_txtAliciKullaniciFocusLost

    private void txtTransferMiktariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTransferMiktariFocusLost
        if(txtTransferMiktari.getText().length()==0){
            addPlaceholderStyle(txtTransferMiktari);
            txtTransferMiktari.setText("Transfer miktarı");
        }
    }//GEN-LAST:event_txtTransferMiktariFocusLost

    
    
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(anasayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(anasayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(anasayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(anasayfa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new anasayfa().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField txtAliciKullanici;
    private javax.swing.JTextField txtEklenecekMiktar;
    private javax.swing.JTextField txtGonderenKullanici;
    private javax.swing.JTextField txtTransferMiktari;
    // End of variables declaration//GEN-END:variables
}
